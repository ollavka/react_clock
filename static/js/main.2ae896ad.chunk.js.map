{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["updateDate","Date","toUTCString","slice","Clock","state","today","timerId","this","window","setInterval","setState","console","info","prevProps","prevClockName","name","currClockName","props","debug","clearInterval","className","Component","App","clockName","hasClock","handleLeftClick","handleRightClick","event","preventDefault","getRandomName","value","now","toString","addEventListener","removeEventListener","ReactDOM","render","document","getElementById"],"mappings":"6MAWA,SAASA,IACP,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAGvC,IAAMC,EAAb,4MACEC,MAAQ,CACNC,MAAON,KAFX,EAKEO,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZL,MAAON,MAGTY,QAAQC,KAAK,EAAKR,MAAMC,SACvB,OAdP,gCAiBE,SAAmBQ,GACjB,IAAcC,EAAkBD,EAAxBE,KACMC,EAAkBT,KAAKU,MAA7BF,KAEJD,IAAkBE,GACpBL,QAAQO,MAAR,uBACkBJ,EADlB,eACsCE,MAvB5C,kCA4BE,WACER,OAAOW,cAAcZ,KAAKD,WA7B9B,oBAgCE,WACE,IAAQS,EAASR,KAAKU,MAAdF,KACAV,EAAUE,KAAKH,MAAfC,MAER,OACE,sBAAKe,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCL,IAEhC,YAED,sBAAMK,UAAU,cAAhB,SACGf,WA3CX,GAA2BgB,aCNdC,EAAb,4MACElB,MAAQ,CACNmB,UAAW,UACXC,UAAU,GAHd,EAuBEC,gBAAkB,WAChB,EAAKf,SAAS,CACZc,UAAU,KAzBhB,EA6BEE,iBAAmB,SAACC,GAClBA,EAAMC,iBAEN,EAAKlB,SAAS,CACZc,UAAU,KAjChB,EAqCEK,cAAgB,WACd,IAAMC,EAAQ9B,KAAK+B,MAAMC,WAAW9B,OAAO,GAE3C,MAAM,SAAN,OAAgB4B,IAxCpB,uDAME,WAA2B,IAAD,OACxBtB,OAAOyB,iBAAiB,QAAS1B,KAAKkB,iBAEtCjB,OAAOyB,iBAAiB,cAAe1B,KAAKmB,kBAE5ClB,OAAOC,aAAY,WACjB,EAAKC,SAAS,CACZa,UAAW,EAAKM,oBAEjB,QAfP,kCAkBE,WACErB,OAAO0B,oBAAoB,QAAS3B,KAAKkB,iBACzCjB,OAAO0B,oBAAoB,cAAe3B,KAAKmB,oBApBnD,oBA2CE,WACE,MAAgCnB,KAAKH,MAA7BmB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CAECI,GAAY,cAAC,EAAD,CAAOT,KAAMQ,WAlDlC,GAAyBF,aCNzBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2ae896ad.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  today: string;\n};\n\nfunction updateDate() {\n  return new Date().toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: updateDate(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        today: updateDate(),\n      });\n\n      console.info(this.state.today);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    const { name: prevClockName } = prevProps;\n    const { name: currClockName } = this.props;\n\n    if (prevClockName !== currClockName) {\n      console.debug(\n        `Renamed from ${prevClockName} to ${currClockName}`,\n      );\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{name}</strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  componentDidMount(): void {\n    window.addEventListener('click', this.handleLeftClick);\n\n    window.addEventListener('contextmenu', this.handleRightClick);\n\n    window.setInterval(() => {\n      this.setState({\n        clockName: this.getRandomName(),\n      });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    window.removeEventListener('click', this.handleLeftClick);\n    window.removeEventListener('contextmenu', this.handleRightClick);\n  }\n\n  handleLeftClick = () => {\n    this.setState({\n      hasClock: true,\n    });\n  };\n\n  handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({\n      hasClock: false,\n    });\n  };\n\n  getRandomName = (): string => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}